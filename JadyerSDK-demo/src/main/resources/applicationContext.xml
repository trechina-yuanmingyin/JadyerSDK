<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
						http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
						http://www.springframework.org/schema/tx
						http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
						http://www.springframework.org/schema/aop
						http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
						http://www.springframework.org/schema/mvc
						http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd
						http://www.springframework.org/schema/context
						http://www.springframework.org/schema/context/spring-context-4.2.xsd
						http://www.springframework.org/schema/data/jpa
						http://www.springframework.org/schema/data/jpa/spring-jpa-1.8.xsd">
	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE"/>
		<property name="ignoreResourceNotFound" value="true"/>
		<!-- ignoreResourceNotFound=true之后,这里同时找到config.properties和db.properties时 -->
		<!-- 默认会使用db.properties里面的配置覆盖掉config.properties里面的同名配置 -->
		<!-- 若没有找到db.properties,则会以config.properties的配置为准 -->
		<property name="locations">
			<list>
				<value>classpath:config-${spring.profiles.active}.properties</value>
				<value>file:/home/jadyer/config/mpp.jadyer.com/db.properties</value>
			</list>
		</property>
	</bean>
	
	
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
		<property name="url" value="${jdbc.url}"/>
		<property name="username" value="${jdbc.username}"/>
		<property name="password" value="${jdbc.password}"/>
		<!-- 配置初始化大小、最小、最大 -->
		<property name="initialSize" value="1"/>
		<property name="minIdle" value="1"/>
		<property name="maxActive" value="20"/>
		<!-- 配置获取连接等待超时的时间 -->
		<property name="maxWait" value="60000"/>
		<!-- 配置间隔多久才进行一次检测,检测需要关闭的空闲连接,单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="60000"/>
		<!-- 配置一个连接在池中最小生存的时间,单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="300000"/>
		<property name="validationQuery" value="SELECT 'x'"/>
		<property name="testWhileIdle" value="true"/>
		<property name="testOnBorrow" value="false"/>
		<property name="testOnReturn" value="false"/>
		<!-- 打开PSCache,并且指定每个连接上PSCache的大小 -->
		<!-- PSCache(preparedStatement)对支持游标的数据库性能提升巨大,比如说Oracle/DB2/SQL Server,在mysql下建议关闭 -->
		<property name="poolPreparedStatements" value="false"/>
		<property name="maxPoolPreparedStatementPerConnectionSize" value="-1"/>
		<!-- 配置监控统计拦截的filters -->
		<property name="filters" value="wall,mergeStat"/>
	</bean>


	<!-- persistence.xml -->
	<bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<property name="persistenceUnitName" value="spring-data-jpa"/>
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
				<property name="database" value="MYSQL"/>
				<property name="databasePlatform" value="org.hibernate.dialect.MySQL5InnoDBDialect"/>
			</bean>
		</property>
		<property name="packagesToScan">
			<list>
				<value>com.jadyer.sdk</value>
			</list>
		</property>
	</bean>
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory"/>
	</bean>
	<tx:annotation-driven transaction-manager="transactionManager"/>
	<jpa:repositories base-package="com.jadyer.sdk" transaction-manager-ref="transactionManager" entity-manager-factory-ref="entityManagerFactory" repository-impl-postfix="Impl"/>
	
	
	<!-- 注册 -->
	<context:component-scan base-package="com.jadyer.sdk"/>
	<aop:aspectj-autoproxy/>
	<mvc:annotation-driven>
		<mvc:message-converters register-defaults="true">
			<bean class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
				<property name="supportedMediaTypes" value="application/json;charset=UTF-8"/>
				<property name="features">
					<array>
						<value>PrettyFormat</value>
						<value>WriteMapNullValue</value>
						<value>WriteNullListAsEmpty</value>
						<value>WriteNullNumberAsZero</value>
						<value>WriteNullStringAsEmpty</value>
						<value>WriteNullBooleanAsFalse</value>
						<value>WriteDateUseDateFormat</value>
					</array>
				</property>
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>
	<mvc:resources mapping="/js/**" location="/js/"/>
	<mvc:resources mapping="/css/**" location="/css/"/>
	<mvc:resources mapping="/img/**" location="/img/"/>
	<mvc:resources mapping="/druid" location="/druid/index.html"/>
	<mvc:view-controller path="/" view-name="forward:/login.jsp"/>
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/jsp/"/>
		<property name="suffix" value=".jsp"/>
	</bean>
	
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding" value="UTF-8"/>
		<property name="maxUploadSize" value="20000000"/>
	</bean>
</beans>